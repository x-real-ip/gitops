---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-iscsi-vaultwarden-db
  labels:
    app: vaultwarden-database
spec:
  storageClassName: "freenas-iscsi-manual-csi"
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: xfs
    volumeHandle: pv-iscsi-vaultwarden-db
    volumeAttributes:
      portal: truenas-master.lan.stamx.nl:3260
      iqn: iqn.2005-10.org.freenas.ctl:vaultwarden-db-2
      lun: "0"
      node_attach_driver: iscsi
      provisioner_driver: node-manual

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: vaultwarden-data-pv-nfs
  labels:
    app: vaultwarden
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: vaultwarden-data-pv-nfs
    volumeAttributes:
      server: truenas-master.lan.stamx.nl
      share: /mnt/ssd/containers/k8s/vaultwarden-data
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: vaultwarden-data-pvc-nfs
  labels:
    app: vaultwarden
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  volumeName: vaultwarden-data-pv-nfs

---
kind: SealedSecret
apiVersion: bitnami.com/v1alpha1
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  name: vaultwarden-server-env-secret
spec:
  encryptedData:
    ADMIN_TOKEN: AgDn/CDFjvN9DoNoZXNzWjIrRRQ8scetVzk1CCdAFOTu11SKPcjxrFcQhi4zHntuhFBPtsE+MzjyeVlmfKgeZBAddPjQYKu8OulpfGfymELPvtxmGxx8ifcGd0q0bguHC5d/W/85Y4vuNww2IbcCNGet45bCAbzE8ZPSwi9bRVwbKm5Xn3QMGh0E+ZjQk9TT3YrhdtGAIkwpfcJsDtz5HSrMu7fwoW0s39Rh59oYoFQoFlOLlTNWM+dfe8c+UlFDUpJRCmuPjJ+GvZpVIjDwvc6sPA3+YgdPbUw7UKMRxdbCSi5sc5bTaqq9d8oC2y+KKZKqQWo7sc52u8JDBAs61YTT/6DRW65wO61KUBkhGxsa5iqRVnaT7sGNTvWSnqkLui2BHwGo1fYpl653YG6GHdXQOyeqJkZAmd7ieI0iod5NphJ+06PxgxfcwGHgyTr92all4uiK4rhiagAdKbTbQD9i0gIfISj7Cxi8+2V6EtfbCoOK6dXP5bYJe8xQEScRaXyZqUA79NtSb8RWVCT5eAnXpuYkZg5aYPb3Esfco4WmORTwPLCcOGoS6FvQwdjOxeV9gp538EdrqMwRduDnLgxo9KmgcbpXtnTdwvVYvazqQgMHZBdS+t1hStD/lQ7aTqKmjdukPdYnQWLt1RKeWQS6F1YLxZ1SPk1t4DQUST3qA9Dh3H8D785GIGLA5lB+dgGnqlXLobJPymPahHpYEw==
    DATABASE_URL: AgBz6h5YKNDNOf5w6SkNcMeUp+DXBP2inMR4uDAEk6f1nlMvv/qKwFBGou5lmdV5RYPoOe/5zzfpg2uC4I2YR61bUzHnH6j1UyuNSjo4ZUJdFFxEGYSmSHLDteCpPXD1cGqjj9Cserhawc9c7soaLOA73MHvyAMyGPnonbewpffcEkh00nlEzNJiSRNc0Cic0OnCsGePOsyVyo5XycHZoLweG8bnrPc6pC2kM7cmmuik1tqUHDZ1EQ/U2GXy1sEFSoBYCM3t+IuCE9ArYQdfgqcjWq9TjkJFu4uegHUvNlmTTehJasgNgLIEeGY2kYhrYpvMXcB+nL/lqGxaCb8TLJpGYZlP/rFwFJWDgzyQjdBvfc0x1+XeLfF4IaRp1yoxO2fRVjrvYo/0AeWyZ4znqBvTmcjiDs+tUIHfYC0U813CVYsFRChl8r/j8RA7/CUDPTgT6PsjZPemoCQykLIf6buVa2mXWlrRWX9cWEqKH0AfOFjYJHwUhKu2561b11VaDygwLLc1PGRZ/90rj9nbIoHxh7qA5gwuw7fGy7LmJ2Yu9ZCoDa9wijxjhFyWpoQGyCpcBc5BisbNSLviAZehVnUadOCl2KXvyhgn0Y9rq5tHioDn8sPu78ZZxGzletzdDVhD7+MR7Gz758sWOs4lmRghtx256T7OLf4bTZvcyGBCNYh/eziBqtdc/fgQaXN14qOqKr7M3aryprEPP51LUgVRkaNJb/fAhNy5QMew1GVYNhlKojMvzI0MM1NjS+4eC3SAZyQM16L2722XnoxEC6mBLswnuK7BVKuTozJiY0Mv2Ib53nxtaGN/uvO+0U4HCz9xTByWmmPiuxL3r9d/dD3Qiny/Oct1kkdKqu0CGFYHo6vxXA==
    SMTP_FROM: AgCfxFS231nQPQRlvlUUIyP+PdrdPxMjVakApBrea9pClJRwzUGtsZTrnrWsnKMyb5+VBTYmTRb68cwHn53WbQVI1idWr8fBq3LszjdZ4SjKVbtts/cBAExSFHAUUR8mGHE2HcUs8NW2CSRSN9+ckk1ZChrpM7ZzuBngCcwvqZLG97+rKoUKdbeNjeeWr4IxxUzsP++ilTkUlCcq1HcZdoERURr40aBRAmGc0y05CZMYPGUgRJh07Q/eHhCi8qhLAhJDNPEoUj4y4o8F7NFwrWpNGACfCKXkBzG/1zfdZHMQ5a/DR9nneOBDsfXho7iwQk6rdubDDQF/MibOYQIh/zjTG3QEJkk6LRb7jXwWv4vVNGKmyVx6Cm/H9vGXwN9Ho00giZsnuOn1xO9zsbjYJagtjr+bGueZgXEg+6TNFZT9yAfhRFPKtBwou+jP4vGbvXGf/K0I8RdNR2yZnu+XHBs83JnLqxd/OlLuE3/BcqHBqau1iQ2VVcanY7GJFWs6GdgKyagU1YcL6jC/0ADhDvE9Qdrbsj+l42Iyi4qDiciZ/cxIReMOv98JV7Vk/TOoYOd/Mfow9ZO7v2rMBXMct60MwzkJS9h70s60iAuA1UWNjqCE1+4i9xYVx5wCDq/B8RT/G2NX6TVv72V/rnaiqlb/wWkPWWqp/PJ2XgMi0MytePIPC2cgXymqDR09IxRytJx9qqKTWineDzQgp27GLQ2r8QoS
    SMTP_PASSWORD: AgDfPN0JDRaXsdy66tv4Yh95r+QywmD8OqEWr70dp4lBxOZ9NYPwQn558uT5z1vRiZJgdRspBwkyKug3MSDb1i8RT9GsHYfBTl6SHZhODSbivppkw108yXbZzVsUlymUmIXr0kpgzF3c8ptpvQ5QExhvT2RZZhB16fJkxKZgyh2dPMLTTxy5MqZ2/yP7phf9hikp8Jx/VfK0eH85iu23EnBA2fwSqPXuaLmwfZGOJ/ugahoDikRwgDHoXGBCZ9H1D1ITnJfkJHc3v1a/Pk9LstiZGEK+/doq+PiVj6/VdkvqbReOwvrqAR9qiht9/jGEw9cGl7o6mT3H0WsBcewo2d6uRYHnPYna5VKyEPS9j3CAE6G87wVcsQeGQAF0iq+jrq9UUzEWMgKDkZzRyZ6kIUMAJuzQgXEKAZrbe/0tY1Hl7qGQ9UztDU+A5WqjIAfEf7+s/GS/wUOfhQci3WUg6WEmzN36lCpTUrRetGGnzTmiWI0Lj1fUqsA9dt6059sz4dZwvSfZRjlnQwrMCydgn+L6hkZ+vvr3dyhePo1FF//hZBypfIFJeeb2YaxqIk5bQlHnADxGq4x1fFk+1rUVtN3/tOtTbD2lNSxXR9YnWq/aUqf7biKkIWr5VH3abgUAkr5z5JW99OadFe46tdMhy+6+BEQBdwd1QSTokGPXC6kIiq5U0ZXx2m1X/2jKCjAxHVaKaiekn5OUQLARIUjJTdDwTq33dKku
    SMTP_USERNAME: AgArnHFZnLNReoc7rS9gcotnii8yw6a9j4zu3lrG+MF8uTbhS5kmTE3z8UKqmFELM/F3mACofz/EElVGDsvfc12IEdto4zQ8esf/Bzlihn3VE38jrDoaO8+1cZvNC6YPgauFLaGFlL5joZwGd8PatyKem3igzz/8/WQmRnIOoPOBLX7aJu0q0VYczmfPEzKwBIRlrR+NQaEx+92yvD8GSFWeeoU/cQOaCr4cgfHGWLeR7PYj+chZ34Ws50AgzmvQwrVGk5Orq1SJz7FKHFfA5681yZp3w0o+0H3Zs8jiPx0UIvEq/5Olj9IoV+biGeFiwgd2h/0dmJ7TrmbgHi2kV/U4+7AgbjDz1ljblzG0HHHRCqbR+/mADaNaKiu+LUSF0/zZgY0fputaVi+xpuHH6D9Jm8fVWXQTBrumrCCpDVHTOGfduzSLv1ESnMZripCK47U1g5ajDQpZ/YafPxRL4mzspYvnCmNzoA3O2rya4LzHAic8QOltxoJcPNW4gBt6+yueCDroEWVzDPrnCq8GL/93YfiliOPF5PNiyOvDHgG+FDrZYbOUz3//oBKrJ2NFCmT6dzSEX4eiqqyTmB2uTxbpDQxTDG54C5mlLENNnnJrZxw+L8S9p5VSVrqDU/QqvukxrdK+yo5m0R3bkbH2/alt2SKWSaOFn1MlgpgHvPmhHDqsXjw4S8UsC4Uow3LsJfe6ES6TiVHILDio/EE=
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      labels:
        app: vaultwarden
      name: vaultwarden-server-env-secret
    type: Opaque

---
kind: SealedSecret
apiVersion: bitnami.com/v1alpha1
metadata:
  name: vaultwarden-database-env-secret
spec:
  encryptedData:
    POSTGRESQL_PASSWORD: AgBTaUNFeQ3c6qidTTHGTVIgOfhkz37biKRTWLLGYMCsGc3tFsBEm8sQfqGrhGlrqLXpyQY9DlTd0uZKKOZIsxYXQ/mR7FzVfDSAzru3lSGpIwKzGbTEqw8AtQQjNbBB6rWeCfiPXjdKUEBH0znDdSK4UM70b06GY9MyOrTrahfePg3ExIB6mw8xo5C1FY4jNhEDv5SWL1zZsjrOWPAuN1hGic6UKxtvqbjsffnQ+t5J8SCu0QdszHLNux3G7I5nutkaDYIkv4LjvKZ/2qyMW98drP247HYdKv5FImYSKf2nzt/xspJ4r9ncv5rPLH3+ESEdMuxvYWorOAO+9gtmOIJS0i/JS26s6DpdPhbRFjpE/sP/hzNcC79Sxwsk+jX4/CgvbQidO64Pm/3p3dVKzb96BbUiRp/U8Akx48qEvrRYLJejynzNZ8mOi06J8cGclSh4ytAry7NOHVtEnUPssG39u302h0FC0F1dwJleHjCIDHizuCenswrFH+yCwmY0NJp08GLXPwXKUtaii4ZJWBE3AYCL67MvIvsK8Rl6zCdMjlYqXGP4a+ZEgQdagOP+fucjHxFd+03Hs1scAjCw8TsMgtV7MIEmbscwk1BL8Pv3NbSdX5cJmdu7vzO1lGuZoATHIIJ9BpmIDOf4VOwrpl91QRr1Y5zmavagYbr62GO8Ow1TKKgSDgr1cu35W+CNWTrVgl74kVe+FbZvnr+REOqTyY1eTNubz7wayRRuPYClkf5MPF+KXiI=
    POSTGRESQL_USERNAME: AgCdIEnH8wD64z36rm2X3D2uUclxVa0Ij+CUY8l+NrJFcZLMrJDmRaV4TT+swGUGH5iC/d6n/3z13hdgA2SX5f04SQF8HNYzq9fvW/2BvtWSp5wZVG5ECAldASpiPU2FROQ5ekVjY2bmRn4dBUcYxXmM8Q6zwgYNlFEujLPEcNDshv08+l9/ZTTrmcrkfw4EuawecP52ipwdFREphYIpRAa3MOLowaY89Fa3YhNEOZduHFG1gBKu3y6EnTLHcsh98/HYq4voYUHaB/5vB2wTfqI0ecdygfcEEh5xeHZrCxAwYEXFihVwj8VewFhJL7HdcQXvc4ho5UW0MFwVBdCvDlW/rcycousvzFIQxMnwRgVHV8jt1yTdpaVKDnDLRpXhqKNrfrdQfnjqiW+m321bfMwfAJ6i2xk5ASkZdIm7zRHY0TyikTuiAQSWb5lpx7MQQ4F7b0tmVL00PC3m68AgIo8tpEZr2rIZHzSQ0dzx96c+Q3HWtHSwKDIDkIwPxRD5Fku/czwtHNllLzxcoX7z3ytHBH2t3nVhAjCTDXamp8CamPgBijWzF0VsyI2ASWF/GOh3kQgysPAsytBH06akluFafAh7yZGFkQ1oBsHJXIRkvyqN8Az6uzv5QNFWe4+ms4cJFNXY+LEtDkkyJxHU/Civ6AHzQI8g1lD5yuBkVCnwLVP7loAWkAeXCy418m/Qg9DzlFjgxeTKb8hLUQ==
  template:
    type: Opaque
    metadata:
      name: vaultwarden-database-env-secret
      labels:
        app: vaultwarden-database

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: vaultwarden-database-env-configmap
  labels:
    app: vaultwarden-database
data:
  POSTGRES_DB: "vaultwarden"

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: vaultwarden-server-env-configmap
  labels:
    app: vaultwarden
data:
  DATA_FOLDER: "data"
  DOMAIN: "https://bitwarden.stamx.nl"
  DATABASE_MAX_CONNS: "10"
  IP_HEADER: "X-Real-IP"
  ENABLE_DB_WAL: "true"
  SIGNUPS_ALLOWED: "false"
  SIGNUPS_VERIFY: "false"
  ROCKET_PORT: "8080"
  SHOW_PASSWORD_HINT: "false"
  REQUIRE_DEVICE_EMAIL: "false"
  INVITATIONS_ALLOWED: "false"
  WEBSOCKET_ENABLED: "true"
  WEB_VAULT_ENABLED: "true"
  SENDS_ALLOWED: "true"
  ORG_CREATION_USERS: "all"
  DB_CONNECTION_RETRIES: "15"
  EMERGENCY_ACCESS_ALLOWED: "false"
  DISABLE_ADMIN_TOKEN: "false"
  SMTP_FROM_NAME: "Bitwarden | Stamx"
  SMTP_SECURITY: "starttls"
  SMTP_TIMEOUT: "15"
  SMTP_PORT: "25"
  SMTP_HOST: "protonmail-bridge-smtp.tools.svc.cluster.local"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vaultwarden-postgresql
  labels:
    app: vaultwarden-database
spec:
  replicas: 1
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  serviceName: vaultwarden-postgresql-hl
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: vaultwarden-database
  template:
    metadata:
      name: vaultwarden-postgresql
      labels:
        app: vaultwarden-database
    spec:
      serviceAccountName: default
      containers:
        - name: postgres
          image: docker.io/postgres:14
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: vaultwarden-database-env-configmap
                optional: false
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-database-env-secret
                  key: POSTGRESQL_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-database-env-secret
                  key: POSTGRESQL_USERNAME
          ports:
            - containerPort: 5432
              name: postgres
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits: {}
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: freenas-iscsi-manual-csi
        resources:
          requests:
            storage: 20Gi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vaultwarden
  labels:
    app: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: vaultwarden-database
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        fsGroup: 1000
      containers:
        - name: vaultwarden
          image: ghcr.io/dani-garcia/vaultwarden:latest
          imagePullPolicy: Always
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          envFrom:
            - configMapRef:
                name: vaultwarden-server-env-configmap
                optional: false
            - secretRef:
                name: vaultwarden-server-env-secret
                optional: false
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          volumeMounts:
            - name: vaultwarden
              mountPath: /data
          resources: {}
      volumes:
        - name: vaultwarden
          persistentVolumeClaim:
            claimName: vaultwarden-data-pvc-nfs

---
kind: Service
apiVersion: v1
metadata:
  name: vaultwarden-postgresql-hl
  labels:
    app: vaultwarden-database
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  selector:
    app: vaultwarden-database
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: 5432

---
kind: Service
apiVersion: v1
metadata:
  name: vaultwarden
  labels:
    app: vaultwarden
spec:
  selector:
    app: vaultwarden
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: vaultwarden-public
  labels:
    app: vaultwarden
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 250m
spec:
  ingressClassName: nginx-public
  rules:
    - host: "bitwarden.stamx.nl"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: vaultwarden
                port:
                  name: http
  tls:
    - hosts:
        - bitwarden.stamx.nl
      secretName: tls-wildcard-stamx-nl
