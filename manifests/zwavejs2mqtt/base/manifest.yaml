---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-nfs-zwavejs2mqtt-us-data
  labels:
    app: zwavejs2mqtt-us
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-zwavejs2mqtt-us-data
    volumeAttributes:
      server: truenas-master.lan.stamx.nl
      share: /mnt/ssd/containers/k8s/zwavejs2mqtt-data/us
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-zwavejs2mqtt-us-data
  labels:
    app: zwavejs2mqtt-us
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  volumeName: pv-nfs-zwavejs2mqtt-us-data

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  labels:
    app: zwavejs2mqtt-us
  name: zwavejs2mqtt-us-settings
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
spec:
  encryptedData:
    S0_Legacy: AgA7j7cVpcA+zC/Gkc5sjRDgb0KvlO5hF6E4S19eOyM42ud2HddK/S3SWdfSN4FztXhZkmtrQpIBgFh58XhQS6AFtYMhJpWzT4BMBZrAngav9zH8KgTLXWseWzjb3ZolDM1dQMvmnn0YNdvJcfdmoEa2JhGIeWaLSBTB/uG+GW5lhgfuLSpsRVkha5FQhhEHmefk+kmmsw9D9Iyc7YP9kOSajGuM2FE+3sAuPsLPVTjYmMZJ9YEX6c6shUeDb90m1ybpSOlRtYUxioZ02xXabShf4HL45otRE0djNZPQQY2bNrwVwUm04Bq+i02M/ZuOMn3qDsMKC0nf/QGtDujjJ19lCozGV1g2HrHeR8IWEh614+Yak0bkJ6mi+NgN4wX4h6apHGFZxKjvAyT/Z0RdDdOx9eUsF0rtLVoJUFlq7EoFRmOwNPZ8cHiU6PSm+3prhNeRsHIwRNbjk9Ls1RCG1FQ0Wlj2RgzLyjuKox8PwFHkN9qPQXbCvEHkoAe56f+6jz6lDZLrXNXqeqT5v9kXQdvpfk1bWcLe/uu2DstVy4Y04JKFer10KPH4Bx6B4OPNdyAnPNbd5P+w2ZHX57XP+WZ815PwHkDlqwC/0w+rsheDkKUevDdxxf4mqBik9tto3/t5O58b46VRBJ1uyPiNihdeL0wCypq36VFTI231/Ca5y06ZbsOU3TxsPVL9TvLffVVok5HVVJYi1PUmHYjDbCil99BJsCUYNwMolGJSzy05ng==
    S2_AccessControl: AgAKQg0OJ57uiQx/VLhRYRewQXCRwycM3Ry8h83oeIThNY68InywU5HSBZ2Is0tg2wdQ7zwhn/MWP/2oRSv+sXJuBndBbpMWubNov1TNlluXTKP1+Q1qxLQrf/B7Nm2G6CArON9e9bcsUCAXrU4sNzHcwRKiHByZyCTDLG6HhuzQ4brc56EHR/9hWU5DcvHk/oH7UpvkAc8x32XxDNgxOAZ7YBK6VicaSc+7vSC2QWij8MGbXs7bg0i67vP/i5SPkaG6D3+GauxPl8bHoK3rvoQjkNQwUY0C1nN9nxbOEoXff8JxN02kw0MqAUSRv1vdjER8CXumYCwmkIwiXoaRlGeRcCq/xAwM2uztb8Jiwxu5lG3a0jbYed1PV3QKXvWjRn50q/f6e8xcHClj7QDGFrEdQItq1xGSCazHCiaZQSzIx1Rzyw9PRg/yMjr6B4Gqzg0X7HqjeAmjm0maWTJ3M4yPFqfUfABtgE+FuGHISQCoCfOaS9+TQ12GglqZ1CrFWv7G6uzAYtUlXkl1G6HM2UnHO28q131K5yzZa5ErykYzNIJO2LFnFkye0u12pbMqfJb18IRwNygWNfdRMqcKkds1S9eHRDW3PjdrbbR0agyTPCJDvVNyQutpFikvOqsS7XT5Bnwj51GymDhlcNSG6nYRectlSI3ic615ledl6r7hkoXENcB+TkVGrDNDruirgENHvDcafbVO2JWxat66znuAeckHQxBgfCGGRiE1VMxAXA==
    S2_Authenticated: AgAvMct2lj9D0AuJVqfV1NaazDRyF55AEBUeDZll1b+qR0X+dTucvkLWSbzbpRzXzp45otfU6W6m1SFKgyvHFSDc3NE4oYkfwqGeym3h0yI+5AQ4YUjT0JtKl6OxpleNWWOzai87pFusHx0EnuEFlyaggCpTIaCNCvUKpuI1OBwU1Q6njuYHY6tfwyHfuDT5a30Rd7J6am4lbb/OdMMcRDqgeiE305rNtX04ifCsprafbWqaBLZoS0twuA9qqYLGcZJnXd/PbbX3t7NDMOdVn8ZGCLQynSZSSGuZOy+FWrmO46Kl+M+3iW1Vb7HhpSSai2zNJZ422Ms0mfvSSGmf/4LDXd6kT5cs86vGcTZ+PsbGs4VCEsNmQclKthCXG+2bMG5FSCkXfHTW1qxAmvTGq5QS+Y8McK/OHZ5hliV8JxVW7LrGES9yENiatYXJnCnjLU3aQVIOs3OEEI4dPl5ey0s1rPGAIxzIKnl6l5r4Ra9iBX1FOcen/i4EjRf9A0kvBtXNS8RFMQgJiGbC31JISHjjg5/zJ7TazUw+0/k+uuRt547XlHK9hoOzvYmLyAdntw6svtxGXatlcc5dHZKPOfUysxpBfsoDnejfD3PhaU1btMp8Q5UocVDw4tXeM23PKCfndVhFGebokUJ3NDJUl7fkG/U1Rfk6z1qFCLt8/c0BwwhW/QICcRdt31B0XNssyn4SwLsrPEn50suYDue/Kmtn23cPJwEd4hwJ7WlbhXjoQA==
    S2_Unauthenticated: AgA3kh2YBud5gONXI54ERyinBZegiONxXwauz6D+nMo7KlWIFRbJ8PnB8BzF2NgM2f1CBlmKsm3wEIkuMpzrZ6snmlUrAXlvQQtkBf4dwN3N2/0cpbzjU8zG3t30aFw/bzTd15STG4a2BgvCaoqT1jFsXLo9f6XhhcmQsvELMxVt1dvYY0hhs8X5+pqDN8yvX0P9P7eH+VY5KebloirKzHODAcgV14yU7xa5xybd033nm9c4QUtarB3rB4AW2USeG0TqpRroAu+I8M2+N6Y3+q+dMHXEK+roHCUS+cp8vdmCNSqXPJ1dCdLa93Nn0qTBp9zNlbX607nTEwq9ZphBZzTg3ADkPPPxLuFwOIQGjDeeoH3JGR1VFm0lyiMTlJh1nCso07umY9ff2XNGg88uyQyTwNPcEl1kfQ6d8dYAqjBYEEtpD9OnHRkNKONh0ytMEmo/c9K13n7zlQDweiEuN5aYc8rkY2up+s3ER8LsHC7xb49BRI2vTs3x9I4QgBX91QbrP+dcteMPFfYPBAsiMfzU4/QM0Oh1eAb3LjWNn1MSo6lqDvdwMS24FAy0vwFkUTHbgZefQ2p1VjaJIFzXrxlh5dkFjmWMdzT3PT1VGZjcjX7dA0fJ8Qf89+85VZFf9d2jImmeoasNA4rT6iHipVApXIVGUYMg+U2c58TiAFSFPl24H4MDmPWowHQb3tYIhqt2r6IlC4O4wi92Q9B8jAVFqNAvgE/YDwve1Q+FwJnb2A==
    LongRange_S2_Authenticated: AgBkYjWcHJ54NZOgGoePQhznHiggGTApReCy1d5BWgoywqezBS+FQ1i2WzwpGfPKMl2lM/VDFca0oEzx0cehIz2qYJenVd3cdDYDyO/clJXx9scO22jQDYSgQl6uCwim3cNPQZkAiwOu/lGmK9VIoN7u8EKhUpOLldaoydVz2rYJiTFtFyh6t0ztc0LJiq76h4bEuR5/FHtJ1hL6IPeNLny3f2juExYYayHeRUrpsHIppwFEg9SNj9mPGP8sTdXXW5Fc4rojLtQ//AlwZ8Emu7zK1dicj/vZrLiwEaRnC8UmjWavZEtzAN4m2RV4HKcwaNf+/DBnIW8cOyHqN16JEPDRfvVE038TR90sPkE79Qb1wAQEj2znJfWReS6dEE01ep6cmpA2QDRGsgsD33RFLrWSadoCRg+pAV/zIFcCrJXnZNSIxTQJwP3YrhbiErOyRwlYeBUdj6NjvoAczAnOM1WtPPr2S93USJzTtXMTGeDk8WWPc+yzhTJleWZ0KSJHgK75j7LakWygWdijaOyK6Q5Ms2t1CrgxVluD/1y+wvwAON4UExafzGT+QPH0SH44GMnZL6Vy7QfgZiZbj/fiR0cumuXdWxAfNLqgNezNcqQmh6F27WRfSGhtNR75hmtZJb3IK7hZ2OKsqpYkiv4OhVIhtJqjzzvPdfuzWMtb33O9qST2cMEmJHQDqRTMWtqtGS4xMlGj8dAMUnb7I0eYl1zvjp/mAX8wSFSk1cK19I92BQ==
    LongRange_S2_AccessControl: AgDrERwVtm86vMXcezwj3ptphiFGFEyQUTUERq+56KPlFj/rc6hpGsvPzZJyKXj+WWwJesLfbB5kIjdwW4rO8AntdcJepZUP6mhbQJ44L0ySTW9nCMevSR1L9O7QoUjKJRWD0j5DtffS97kjHBCydQm2tNDjVdjDr+G9j09VNTs9Yh3TTiOPSIemXUDQagRlk4H8WEh+4+IcYG/+nDhqVh8vs9dAP0/5RdwlF0uCOf6+GT1LLOn0K54K0bYqfFrYH5RUrEvF8JdnK0rpAy4rsrEMfVfpsStsoei616YIoj5KdGfTUSlvzLPNLh8oNPr7zoo4uL6100vd9u94cTo2sAtdv33hCPQQdEQ93XMrjbpxD7XxUO9NB+56ws6L9x0t5LZm6y+yY0qL4TWQ7/NJYXA/6rP4OmIee0uWq3LVIpZMvxD4vcZvSkNZOGdDuF2Vi763dnInHiLosHNIBYE+99dtw/9rEvXAytRX9ZgCk3EZ63YnQfGdglu+16AQVT12n/0jWgVo9JYDQVHqz2DPXU3KGWk0E8gPpkyRiGlJFsB2ZLoePTbxkVkKVdbJ9dWkNbLVdEpiidMIGtjr452j8ZLQu2wA0JNq4PricmOuGRek82dwHHYVoFXfgX+dulFFXrNjfSHcNA7PWA5uyc00wCc2SqCJKDkD6PDExzaOlHYRvVEXLmKiveg92luYbtk4J4+5pAbQM9WNCGLzOHmx/NdqGnNKF0l125+BiK8W0LUQBg==
  template:
    data:
      settings.json: |-
        {
          "mqtt": {
            "name": "Zwavejs2Mqtt",
            "host": "localhost",
            "port": 1883,
            "qos": 1,
            "prefix": "zwave",
            "reconnectPeriod": 3000,
            "retain": true,
            "clean": true,
            "auth": false,
            "_ca": "",
            "ca": "",
            "_cert": "",
            "cert": "",
            "_key": "",
            "key": "",
            "disabled": true
          },
          "gateway": {
            "type": 0,
            "plugins": [],
            "authEnabled": false,
            "payloadType": 0,
            "nodeNames": true,
            "hassDiscovery": false,
            "discoveryPrefix": "homeassistant",
            "logEnabled": false,
            "logLevel": "debug",
            "logToFile": false,
            "values": []
          },
          "zwave": {
            "port": "/z-stick",
            "commandsTimeout": 30,
            "logLevel": "debug",
            "logEnabled": true,
            "securityKeys": {
              "S0_Legacy": "{{ index . "S0_Legacy" }}",
              "S2_Unauthenticated": "{{ index . "S2_Unauthenticated" }}",
              "S2_AccessControl": "{{ index . "S2_AccessControl" }}",
              "S2_Authenticated": "{{ index . "S2_Authenticated" }}"
            },
            "securityKeysLongRange": {
              "S2_Authenticated": "{{ index . "LongRange_S2_Authenticated" }}",
              "S2_AccessControl": "{{ index . "LongRange_S2_AccessControl" }}"
            },
            "deviceConfigPriorityDir": "/usr/src/app/store/config",
            "logToFile": true,
            "serverEnabled": true,
            "serverServiceDiscoveryDisabled": false,
            "enableSoftReset": true,
            "enableStatistics": true,
            "serverPort": 3000,
            "maxNodeEventsQueueSize": 100,
            "disclaimerVersion": 1
          },
          "backup": {
            "storeBackup": false,
            "storeCron": "0 0 * * *",
            "storeKeep": 7,
            "nvmBackup": false,
            "nvmBackupOnEvent": false,
            "nvmCron": "0 0 * * *",
            "nvmKeep": 7
          }
        }
    metadata:
      labels:
        app: zwavejs2mqtt-us
      name: zwavejs2mqtt-us-settings

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: zwavejs2mqtt-us
  template:
    metadata:
      labels:
        app: zwavejs2mqtt-us
    spec:
      containers:
        - name: zwave-us
          image: "ghcr.io/zwave-js/zwave-js-ui:latest"
          imagePullPolicy: Always
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 1000m
              memory: 400Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "2000"
          ports:
            - containerPort: 8091
              protocol: TCP
            - containerPort: 3000
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            httpGet:
              httpHeaders:
                - name: Accept
                  value: text/plain
              path: /health
              port: 8091
            initialDelaySeconds: 30
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/src/app/store
              name: data
            - mountPath: /usr/src/app/store/settings.json
              name: settings
              readOnly: true
              subPath: settings.json
            - mountPath: /z-stick
              name: z-stick
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-nfs-zwavejs2mqtt-us-data
        - name: z-stick
          hostPath:
            path: /dev/serial/by-id/usb-0658_0200-if00
            type: CharDevice
        - name: settings
          secret:
            defaultMode: 420
            secretName: zwavejs2mqtt-us-settings

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: http
      port: 80
      targetPort: 8091

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us-ws
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: ws
      port: 3000
      targetPort: 3000

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  ingressClassName: nginx-private
  rules:
    - host: zwave-us.lan.stamx.nl
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: zwavejs2mqtt-us
                port:
                  number: 80
  tls:
    - hosts:
        - zwave-us.lan.stamx.nl
      secretName: tls-wildcard-lan-stamx-nl
